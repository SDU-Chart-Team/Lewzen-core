{
    "tag": "SVGElement",
    "comment": "SVG element.",
    "attributes": [
        {
            "name": "clip-path",
            "type": "string",
            "comment": "a clipping path with the element it is related to."
        },
        {
            "name": "clip-rule",
            "type": "enum",
            "candidates": ["nonzero", "evenodd", "inherit"],
            "default": "nonzero",
            "comment": "only applies to graphics elements that are contained within a <clipPath> element. basically works as the fill-rule attribute, except that it applies to <clipPath> definitions."
        },
        {
            "name": "color",
            "type": "string",
            "comment": "used to provide a potential indirect value, currentcolor, for the fill, stroke, stop-color, flood-color, and lighting-color attributes."
        },
        {
            "name": "color-interpolation",
            "type": "enum",
            "candidates": ["auto", "sRGB", "linearRGB"],
            "default": "sRGB",
            "comment": "specifies the color space for gradient interpolations, color animations, and alpha compositing."
        },
        {
            "name": "cursor",
            "type": "enum",
            "candidates": ["auto", "crosshair", "default", "pointer", "move", "e-resize", "ne-resize", "nw-resize", "n-resize", "se-resize", "sw-resize", "s-resize", "w-resize", "text", "wait", "help", "inherit"],
            "default": "auto",
            "comment": "specifies the mouse cursor displayed when the mouse pointer is over an element."
        },
        {
            "name": "display",
            "type": "string",
            "comment": "control the rendering of graphical or container elements."
        },
        {
            "name": "fill",
            "type": "string",
            "comment": "for shapes and text it's a presentation attribute that defines the color (or any SVG paint servers like gradients or patterns) used to paint the element; for animation it defines the final state of the animation. eg: 'red', '#FFFFFF', 'url(#my_define)'."
        },
        {
            "name": "fill-opacity",
            "type": "number",
            "comment": "a presentation attribute defining the opacity of the paint server (color, gradient, pattern, etc) applied to a shape."
        },
        {
            "name": "fill-rule",
            "type": "enum",
            "candidates": ["nonzero", "evenodd"],
            "default": "nonzero",
            "comment": "a presentation attribute defining the algorithm to use to determine the inside part of a shape."
        },
        {
            "name": "filter",
            "type": "string",
            "comment": "specifies the filter effects defined by the <filter> element that shall be applied to its element."
        },
        {
            "name": "mask",
            "type": "string",
            "comment": "a presentation attribute mainly used to bind a given <mask> element with the element the attribute belongs to."
        },
        {
            "name": "opacity",
            "type": "number",
            "comment": "specifies the transparency of an object or of a group of objects, that is, the degree to which the background behind the element is overlaid."
        },
        {
            "name": "pointer-events",
            "type": "enum",
            "candidates": ["bounding-box", "visiblePainted", "visibleFill", "visibleStroke", "visible", "painted", "fill", "stroke", "all", "none"],
            "default": "visiblePainted",
            "comment": "a presentation attribute that allows defining whether or when an element may be the target of a mouse event."
        },
        {
            "name": "shape-rendering",
            "type": "enum",
            "candidates": ["auto", "optimizeSpeed", "crispEdges", "geometricPrecision"],
            "default": "auto",
            "comment": "provides hints to the renderer about what tradeoffs to make when rendering shapes like paths, circles, or rectangles."
        },
        {
            "name": "stroke",
            "type": "string",
            "comment": "a presentation attribute defining the color (or any SVG paint servers like gradients or patterns) used to paint the outline of the shape."
        },
        {
            "name": "stroke-dasharray",
            "type": "string",
            "comment": "a presentation attribute defining the pattern of dashes and gaps used to paint the outline of the shape."
        },
        {
            "name": "stroke-dashoffset",
            "type": "number",
            "comment": "a presentation attribute defining an offset on the rendering of the associated dash array."
        },
        {
            "name": "stroke-linecap",
            "type": "enum",
            "candidates": ["butt", "round", "square"],
            "default": "butt",
            "comment": "a presentation attribute defining the shape to be used at the end of open subpaths when they are stroked."
        },
        {
            "name": "stroke-linejoin",
            "type": "enum",
            "candidates": ["arcs", "bevel", "miter", "miter-clip", "round"],
            "default": "miter",
            "comment": "a presentation attribute defining the shape to be used at the corners of paths when they are stroked."
        },
        {
            "name": "stroke-miterlimit",
            "type": "number",
            "comment": "a presentation attribute defining a limit on the ratio of the miter length to the stroke-width used to draw a miter join. when the limit is exceeded, the join is converted from a miter to a bevel."
        },
        {
            "name": "stroke-opacity",
            "type": "number",
            "comment": "a presentation attribute defining the opacity of the paint server (color, gradient, pattern, etc) applied to the stroke of a shape."
        },
        {
            "name": "stroke-width",
            "type": "number",
            "comment": "a presentation attribute defining the width of the stroke to be applied to the shape."
        },
        {
            "name": "transform",
            "type": "string",
            "comment": "defines a list of transform definitions that are applied to an element and the element's children."
        },
        {
            "name": "vector-effect",
            "type": "enum",
            "candidates": ["none", "non-scaling-stroke", "non-scaling-size", "non-rotation", "fixed-position"],
            "default": "none",
            "comment": "specifies the vector effect to use when drawing an object.vector effects are applied before any of the other compositing operations, i.e. filters, masks and clips."
        },
        {
            "name": "visibility",
            "type": "enum",
            "candidates": ["visible", "hidden", "collapse"],
            "default": "visible",
            "comment": "control the visibility of graphical elements."
        }
    ]
}