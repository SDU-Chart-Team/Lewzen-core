{
    "type": "coordinate",
    "includes": [
        "regex"
    ],
    "comment": "A <coordinate> is a length in the user coordinate system that is the given distance from the origin of the user coordinate system along the relevant axis (the x-axis for X coordinates, the y-axis for Y coordinates). Its syntax is the same as that for <length>.\nWithin the SVG DOM, a <coordinate> is represented as an SVGLength or an SVGAnimatedLength.",
    "accepts": [
        {
            "ctype": "int",
            "cname": "integer",
            "to_string": "return std::to_string(attr);"
        },
        {
            "ctype": "float",
            "cname": "float",
            "to_string": "return std::to_string(attr);"
        },
        {
            "ctype": "double",
            "cname": "double",
            "to_string": "return std::to_string(attr);"
        },
        {
            "ctype": "long",
            "cname": "long",
            "to_string": "return std::to_string(attr);"
        },
        {
            "ctype": "long long int",
            "cname": "long integer",
            "to_string": "return std::to_string(attr);"
        },
        {
            "ctype": "long double",
            "cname": "long double",
            "to_string": "return std::to_string(attr);"
        },
        {
            "ctype": "std::string",
            "cname": "legal string",
            "to_string": "if (!is_legal_string(attr)) {\n    _LZ_WARNING(\"Illegal string when converting \\\"\" << attr << \"\\\" to Coordinate.\")\n    return STR_NULL;\n} else {\n    return attr;\n}",
            "additional_funcs": [
                {
                    "declaration": "static bool is_legal_string(const std::string &attr);",
                    "comment": "Check if a string is legal as a Coordinate attribute.",
                    "implementation": "std::regex re(R\"(^(([+-]?[0-9]+)([Ee]([+-]?[0-9]+))?|[+-]?[0-9]*\\.[0-9]+([Ee]([+-]?[0-9]+))?)(em|ex|px|in|cm|mm|pt|pc|%)?$)\");\nreturn std::regex_match(attr, re);"
                }
            ]
        }
    ]
}