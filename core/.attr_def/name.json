{
    "type": "name",
    "includes": [
        "regex"
    ],
    "comment": "A name, which is a string where a few characters of syntactic significance are disallowed.",
    "accepts": [
        {
            "ctype": "std::string",
            "cname": "legal string",
            "to_string": "if (!is_legal_string(attr)) {\n    _LZ_WARNING(\"Illegal string when converting \\\"\" << attr << \"\\\" to Name.\")\n    return STR_NULL;\n} else {\n    return attr;\n}",
            "additional_funcs": [
                {
                    "declaration": "static bool is_legal_string(const std::string &attr);",
                    "comment": "Check if a string is legal as a Name attribute.",
                    "implementation": "std::regex re(R\"(^[^,()\\x20\\x9\\xD\\xA]+$)\");\nreturn std::regex_match(attr, re);"
                }
            ]
        }
    ]
}